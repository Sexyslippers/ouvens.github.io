---
layout: post
title:  "现代前端体系-第一章 1-web发展概述"
date:   2016-07-18
author: ouven
tags: 现代前端体系 第一章 1-web发展概述
categories: modern-frontend
cover:  "assets/category/type-javaScript.png"
---

#### 1.1、web发展概述

&emsp;&emsp;同样我不会讲太多关于前端发展历史性的东西，因为觉得了解太详细很快也会忘记。我们将从前端工程师的角度上来看看自前端诞生以来的变化。
&emsp;&emsp;作为一个前端工程师，我们现在可能会这样来写我们的一个HTML文件。

```
<!doctype html>
<html lang="zh-cn" font-size="67.5px">
<head>
	<meta charset="utf-8">
	<title>网站名称</title>
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
	<meta name="format-detection" content="telephone=no">
	<meta name="viewport" content="width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no">
	<meta name="keywords" content="页面SEO关键字"/>
	<meta name="description" content="页面的SEO摘要，非常重要"/>
	<meta name="protocol" content="1">
	<meta itemprop="name" content="页面标题">
	<meta itemprop="image" content="/img/logo-rich.png"/>
	<meta http-equiv="Cache-Control" content="max-age=7200" /> 
	<meta http-equiv="Expires" content="Mon, 20 Jul 2013 23:00:00 GMT" />
	...
	<link rel="dns-prefetch" href="//my.domain.com"/>
	<link href="reset.css" rel="stylesheet">
	<link href="main.css" rel="stylesheet">
</head>
<body>
	<div id="doc">
	　　　<header id="hd">
	　　　　　　<video src="./a.m3u8" width="300" height="220"></video>
	　　　</header>
	　　　<div id="bd">
			<picture>
				<source media="(min-width: 64em)" src="high-res.jpg">
				<source media="(min-width: 37.5em)" src="med-res.jpg">
				<img src="fallback.jpg" alt="picture">
			</picture>
	　　　</div>
	　　　<footer id="ft">
	　　　　　　<embed src="./rect.svg" width="300" height="100" type="image/svg+xml"/>
	　　　　　　<canvas id="myCanvas"></canvas>
	　　　</footer>
	</div>
	<script src="mod.js"></script>
	<script src="main.js"></script>
</body>
</html>
```

我们先不看这些东西有什么用，而且太多，这里写的也不全。我们再来看我们以前写过的一个前端页面。

```
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
	<title>网站标题</title>
	<meta name="keywords" content="页面SEO关键字"/>
	<meta name="description" content="页面的SEO摘要，非常重要"/>
	<meta http-equiv="Cache-Control" content="max-age=7200" />
	<link href="main.css" rel="stylesheet">
</head>
<body>
	<div id="doc">
	　　　<div id="hd">
	　　　　　<embed src="player.swf" width="300" height="220"></embed>
	　　　</div>
	　　　<div id="bd">
			<picture>
				<img src="fallback.jpg" alt="picture">
			</picture>
	　　　</div>
	　　　<div id="ft">
			...
	　　　</div>
	</div>
	<script src="main.js"></script>
</body>
</html>
```

&emspl;&emsp;相比十年前的前端页面，有些地方变简单了，但是更多的是变多了，为什么要搞的怎么多。页面不是更慢了吗？当然这些只是冰山一角，或许你还可能看到：

```
<link href="./x-image.html" rel="import" />
<x-image width="300" height="200"></x-image>
```

或者是

```
@Component({
    selector: 'my-app',
    template:`< hero-form>< /hero-form>`,
    directives:[HeroFormComponent]
})
```

或者

```
app.use(function *(next){
  var start = new Date;
  yield next;
  this.set('X-Response-Time', new Date - start+ 'ms');
});
```

&emsp;&emsp;这些又是些什么东西？应该有些人知道这些是什么含义。但是尽管如此，这并不代表你对前端了解了，这仅仅说明你现在还没有被这个领域淘汰。因为这些巨大的变化仅仅发生在4年之间，4年，刚够读完本科，但是我们高校的课本内容是二十年不变的。可以说，是互联网和移动互联网的井喷促进了前端的发展，带来了这个领域的变化。不能确定未来前端最终会变成什么样子，但可以确定的是5年后又将是完全不同的。如果你对这些东西大部分也不是很了解很不用急，这写内容本书后面都会为你一一介绍。

&emsp;&emsp;回到最开始举的那个页面模板例子，里面涉及到了布局、移动web、SEO、缓存优化、消息rich化、预解析、HTML5、视频流、动画、模块化等等多方面的技术。而这只是一个简单的模板，实践开发或网络访问时则可能会涉及到开发工具、网络协议、网站性能等方面的知识技术。

&emsp;&emsp;如今web工程师需要做的远不仅仅将一个设计图片实现在页面上了，但这些却也是基础。我们或许还需要掌握的有：web协议和浏览器优化、高效开发、脚本语言（不仅仅是表现层的JavaScript）、界面技术、交互框架、自动化构建、组件化、SEO，甚至包括后端和移动端，所以不少web工程师随着技术的积累最终也成为了全栈式工程师。

&emsp;&emsp;web的概念随着互联网的出现而形成，web最早的形式为网站的静态黄页，渐渐到用后端的数据组装实现的动态页面技术，到后端语言的mvc框架，为了处理复杂的web应用，慢慢出现了前后端分离，到纯前端的mv*框架为王的时代，现在已经进入以组件化结合的数据流处理的阶段，以及目前正在尝试实现的跨后端、终端技术。web技术发展如此迅速并且多样化，但通过这一系列的变化我们可以看出，前端从无到有，发展到现在仍然在以效率和性能为最终导向的道路上继续探索，相信未来关于web技术这方面的探索仍会有增无减。

> 不仅如此，前端的未来发展也仍然是已提升开发效率和提高项目质量为最终目标。





