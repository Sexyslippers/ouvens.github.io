---
layout: post
title:  "现代前端体系-第二章 1-HTTP与HTTPS"
date:   2016-07-31
author: ouven
tags: 现代前端体系 第二章 1-HTTP与HTTPS
categories: modern-frontend
cover:  "assets/category/type-javaScript.png"
---

### 第二章 1-HTTP 1.x与HTTP 2

**2.1.1 HTTP 1.x**

&emsp;&emsp;HTTP协议基础概念大家都知道了，基于TCP协议的封装，主要是用来在网络之间传输超文本写的一种协议。对于1.X版本的HTTP协议，只有两个版本，1.0和1.1版本。HTTP1.1发布于1999年，相对于HTTP1.0，具有协议扩展切换、缓存、部分传输优化、长连接、消息传递、host头域、错误提示等主要优势。

&emsp;&emsp;所谓的协议扩展切换指的是HTTP 1.1支持在请求消息中包含Upgrade头，通过头部标识，客户端可以让服务器知道它能够支持的其它备用通信协议，服务器可以根据支持的其他协议进行曲切换，使用备用协议与客户端进行通。例如websocket协议就是典型的应用。HTTP/1.1增加了OPTIONS方法，它允许客户端获取一个服务器支持的方法列表。

&emsp;&emsp;缓存主要是对HTTP 1.0的expire头部控制的增强，HTTP/1.1增加了Cache-Control头域，用来支持例如max-age指令支持相对时间戳；private和no-store指令禁止对象被缓存;no-transform阻止Proxy进行任何改变响应的行为。另外看下这个http协议缓存的判断机制流程。

&emsp;&emsp;部分传输优化值HTTP可以支持文件部分的传输，其原理是请求一个文件的起始位置和一个偏移长度来进行文件的部分传输，请求成功返回码为206。这个我们在实际开发中使用并不多，这里我们只要了解就可以了。

&emsp;&emsp;长连接相信大家都有了解过了。当一个请求文件请求连接建立以后，服务器会保持这个请求一段时间，在这段时间内，同源的其它文件请求将复用这个已经建立好的连接，而不用像HTTP 1.0那样重新握手建立连接，这样就有效将建立连接和关闭连接的网络开销平均到每个单个的请求上。例如请求m个文件，每个文件请求建立连接和关闭连接的开销为ams，使用HTTP 1.0的额外开销为m*ams，而使用HTTP 1.1的文件额外开销为ams。在HTTP/1.0中，要建立长连接，可以在请求消息中包含Connection: Keep-Alive头域，如果服务器愿意维持这条连接，在响应消息中也会包含一个Connection: Keep-Alive的头域。另外HTTP/1.1还引入了hop-by-hop头域，来对请求进行传输时每一跳时控制。这里就不再展开了。


&emsp;&emsp;一般认为HTTP的传输报文由四个部分组成，请求头、头部、回车空行和正文组成。例如下面是一个例子。

其中请求是数据信息可以放在请求头(例如get、put时)或正文(例如post时)。需要注意的是使用post请求时可以在正文中传输二进制文件，例如传输formdata上传文件，当然如果需要兼容IE8以下的浏览器，那还是用iframe嵌入的方式上传文件了。

**2.1.2 HTTP 2**

&emsp;&emsp;HTTP 2.0即超文本传输协议 2.0，是下一代HTTP协议。说到HTTP2,不得不提的是SPDY协议。SPDY是一种HTTP兼容协议，由Google发起，Chrome、Opera、Firefox以及Amazon Silk等较新的浏览器已提供支持。SPDY已然成为一套成熟的高效协议标准，但是问题是由于使用SPDY必须使用HTTPS，HTTP Working-Group 最终决定以 SPDY/2 为基础，开发HTTP/2，可以用来传输明文，同时使用HPACK算法来压缩消息头。最终形成了极具优势的下一代传输层协议。

&emsp;&emsp;几个明显优势：

1、HTTP/2 采用二进制格式传输数据，而非HTTP/1.x的文本格式。同时HTTP/2对消息头采用HPACK进行压缩传输，节省传输带宽。相比而HTTP/1.x每次请求，都会携带大量冗余头信息(例如cookie等这些，所以我们目前在存放图片、js等文件是一般分域存储，因为cookie是默认不能跨域的，而静态资源并不需要这些cookie信息)。

2、HTTP2使用TCP复用，所有的请求均通过一个TCP连接并发完成。HTTP/1.x 虽然通过 pipeline 也能并发请求，但是多个请求之间的响应会被阻塞的，

3、同时，HTTP2 还支持优先级和流量控制。

4、服务器推送：服务端能够能把资源主动推送给客户端。就像浏览器端的资源预加载一样，而且资源推送可以在html文档下载是之前，让html和js或css并行下载。从而大大加快网络等待时间。

&emsp;&emsp;当然高兴的同时，我们也必须要了解，其实HTTP2和我们还有一段距离，目前支持HTTP2协议传输的浏览器依然很少，要求edge13、chrome45或Safari9.2以上的支持，但是随着技术的更新和浏览器的更新迭代，最终还是会到来，所以依然值得期待。
