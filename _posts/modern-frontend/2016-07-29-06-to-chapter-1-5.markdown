---
layout: post
title:  "现代前端体系-第一章 5-前端工程师困境"
date:   2016-08-01
author: ouven
tags: 现代前端体系 第一章 5-前端工程师困境
categories: modern-frontend
cover:  "assets/category/type-javaScript.png"
---

#### 1.5、前端工程师困境

&emsp;&emsp;之前有讲到，优秀前端工程师的稀缺并不是我们缺少前端工程师，而是因为大多数前端工程师缺少更多的思考。没有思考未来可能遇到的问题，没有思考深入的前端具体是什么样子的，因为前端并不是像素级的切图仔。

&emsp;&emsp;好，我们来看下前端工程师目前的困境。也是我思考比较多的，也相信深入思考过的你也曾经考虑过。为什么前端框架这么多？为什么前端发展这么快？我要我该怎么选择？感觉前端就这些，前端该怎么去提升？论坛社区相信也会有人回答的很全面：总结答案就是因为前端人热衷于造轮子，然后喜欢用自己轮子给别人用;至于选择，就是需要根据自己的应用场景来选择框架。这些回答没有问题。但是我想说的是，如果你真的深入全面理解了前端，或许就不会有这些问题。几个原因，一是我们要理解前端的发展真正需要解决什么问题(绝不是写个框架可以提升开发效率这么简单，不然怎么有这么多框架)，而是前端工程师们既然是工程师还是要站在团队的高度上看问题。

&emsp;&emsp;就比如框架选择，很多时候我们并不是重新做一件事情，而是去改善一件事情，不要动不动就想用新框架去重构你的项目，如果你还想用自己的框架那就更尴尬了，因为或许团队其他的人不一定接受你挖的这个坑(当然接受是最好了，但是这种情况极少，因为大家都不愿麻烦，而且其它人觉得对于他们来说除了增加工作量吗，没有任何好处)。即便是你自己，重构一个项目的工作量应该也不小的。

&emsp;&emsp;很多人觉得，现在什么火，就应该跳去折腾一下，这样才有创新精神。或者觉得老项目里jQuery用的不爽了，要换成单向数据流的方式管理实现。请多思考一下，再做决定。个人观点是，团队技术架构的选择需要结合团队本身的适应能力来调整。例如团队里至少一般人以上认同并支持你的技术改进，才可以考虑去尝试，否则后面你的工作别人来接手就比较麻烦。

&emsp;&emsp;至于上文提出的一系列问题，如果真正理解的前端的本质，可能就不用考虑太多了。因为任何一个框架只是一个外壳封装，真正的思想你可以随意运用切换。例外看看团队目前的状况，使用任何一个框架遇到任何问题对你来说都是小菜一碟。


